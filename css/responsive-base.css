/*
 * Hello!
 * Here is how you would write responsive styles if you chose NOT to use a grid system.
 * If you'd like to use a grid system I'd recommend using one of the following: 
 * 1. http://getskeleton.com/
 * 2. http://neat.bourbon.io/ 
 * 3. http://susy.oddbird.net/
 * When you are writing these styles, remember to write all of your base/mobile styles
 * first.
 * Then write your styles for your next larger "breakpoint" (screen width).
 * Then write your styles for your largest "breakpoint".
 * You can have as many breakpoints defined as you like - most developers use 3 or 4 that correspond with comminly used device-widths that they plan to support.
 * Use the internet as a resource when you need information!
 * See notes below. ***
 */

.example-style1 {
 /*
  * Styles for mobile size and larger
  * These are your base styles
  * Write these styles first
  */

  /*color: black;*/
}

body {
  margin: 0px;
  padding: 0px;
  font-family: 'Open Sans',Helvetica, sans-serif;
}


/*******************************************************/
/*style for navigation bar*/
.navigation{
  list-style: none;
  background: #111;
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
}

.nav-item{
  width: 200px;
  border-top: 1px solid #111;
  border-bottom: 1px solid #000;
}

.nav-item a{
  display: block;
  padding: 1em;
  background: linear-gradient(135deg,
                              rgba(0,0,0,0) 0%,
                              rgba(0,0,0,0.65) 100%);
  color: white;
  font-size: 1.2em;
  text-decoration: none;
  transition: color 0.2s, background 0.5s;
}

.nav-item a:hover{
  color: #c74438;
  background: linear-gradient(135deg,
                              rgba(0,0,0,0) 0%,
                              rgba(75,20,20,0.65) 100%);
}

.site-wrap{
  min-width: 100%; /**???***/
  min-height: 100%; /**???***/
  background-color: #fff;
  position: relative;
  top: 0;
  bottom: 100%;
  left: 0;
  z-index: 1; 
  padding: 4em;
  background-image: linear-gradient(135deg,
                    rgb(254, 355, 255) 0%,
                    rgb(221, 241, 249) 35%,
                    rgb(160, 216, 239) 100%);
  background-size: 200%;
}

.nav-button{
  position: absolute;
  clip: rect(0, 0, 0, 0); /*hide the checkbox*/
}

/*make the lable into a "hambuger" icon*/
label[for="nav-button"]{
  position: fixed;
  top: 15px;
  left: 15px;
  z-index: 2;
  width: 30px;
  height: 30px;
  cursor: pointer;
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' version='1.1' x='0px' y='0px' width='30px' height='30px' viewBox='0 0 30 30' enable-background='new 0 0 30 30' xml:space='preserve'><rect width='30' height='6'/><rect y='24' width='30' height='6'/><rect y='12' width='30' height='6'/></svg>");
  background-size: contain;
}

/*make the button work*/
.nav-button:checked + label{
  left: 215px;
}

.nav-button:checked~ .site-wrap{
  left:200px;
  box-shadow: 0 0 5px 5px rgba(0,0,0,0.5);
}

/**/
.nav-button + label, .site-wrap{
  transition: left 0.2s;
}

body{
  overflow-x: hidden;
}

/*******************************************************/
/*styles for header section*/
header{
  width: 100%;
  height: 30em;
  background-image: url('../img/background.jpg');
  /*set width as 100% to make it response to change of window size. auto:inherit the size from positioning area ? */
  /*  background-size: 100% auto;*/
  background-size: cover;
/*  background-size: 100% 100%,
  background-repeat: no-repeat;*/
}

 .container{
  text-align: center;
  margin: 50px; /*why background position changed by margin property??*/
  padding: 50px;
  /*border: solid red 2px;*/ /*for viewing*/
}

/*How to control their behaviours when window size changed???*/
.Intro {
  font-size: 2.5rem;
  /*border: solid 1px;*/ /*for viewing*/
}

.MyName {
  font-size: 3.0625rem;
  /*border:solid 1px;*/ /*for viewing*/
}


/*******************************************************/
/*styles for introduction section*/
h1{
  font-size: 35px;
  font-family: 'Gentium Book Basic', Helvetica, sans-serif;
}

h2{
  color: #a844ba
}

p{
  letter-spacing: 0.05em;
  font-weight: 300;
}

.content{
  margin: 10px;
  /*height: 300px;*/
/*  overflow: scroll; */
  padding: 10px;
  /*border: solid red 1px;*/ /*for viewing*/
  font-family: "Open Sans", "Helvetica Neue", sans-serif;
}

/*******************************************************/
/*style for footer section*/
footer{
  width:100%;
  height: 300px;
  background-color: rgb(198, 152, 90);
}

footer p{
  color: white;
  font-size: 0.9rem;
}

/* When use table? can use <li> here */
#Social_Media{
  max-width: 300px;
  margin: 0px auto;
  display: table;
  border: solid 1px;
}
#Social_Media span{
  display: table-cell;
  padding: 0px 10px;
  vertical-align: middle;
}

.container div{
  /*border: solid 1px;*/ /*for viewing*/
}


footer a {
    font-size: 20px; 
    font-weight: bold;
    text-decoration: none;
}

a:hover {
   font-weight: 500;
}

.col{
  height: 50px;
}

/*****************************************/
/*rounded image*/
.img-circle{
  width:150px;
  height: 150px;
  border-radius: 50%;
}

.img_list li{
/*  display: table-cell; */
  list-style-type: none;
  padding: 1 0em;
}

@media (min-width: 700px) {
  .img-circle {
    width: 200px;
    height: 200px;
    border-radius: 50%;
  }

/*  .img_list li{
    list-style-type: none;
    display: table-cell;
  }*/

  .img_list{
    width: 500px;
  }

  .img_list li{
    width: 200px;
    float: left;
  }

  .content, footer{
    clear: left;
  }
}

@media (min-width: 1024px) {
  .img_list li{
    list-style-type: none;
    display: table-cell;
  }
}

/*****************************************/
/*flip animation */
/* entire container, keeps perspective */
.flip-container {
  perspective: 1000;
}
  /* flip the pane when hovered */
  .flip-container:hover .flipper, .flip-container.hover .flipper {
    transform: rotateY(180deg);
  }

.flip-container, .front, .back {
  width: 200px;
  height: 200px;
}

/* flip speed goes here */
.flipper {
  transition: 0.6s;
  transform-style: preserve-3d;

  position: relative;
}

/* hide back of pane during swap */
.front, .back {
  backface-visibility: hidden;

  position: absolute;
  top: 0;
  left: 0;
}

/* front pane, placed above back */
.front {
  z-index: 2;
  /* for firefox 31 */
  transform: rotateY(0deg);
}

/* back, initially hidden pane */
.back {
  transform: rotateY(180deg);
}

.back p{
  text-align: center;
  position: absolute;
  width: 100%;
  top: 40px;
}

.github_link{
  text-align: center;
}


/*******************************************************/
@media (min-width: 700px) {
  .example-style1 {
    /*
     * Styles for tablet size and larger here.
     * Here is where you would overwrite any base styles that you want to change 
     * for this breakpoint.
     * Base styles are inherited here so no need to repeat formerly defined base 
     * properties that will remain unchanged.
     * Write these styles 2nd.
     */
  }
}
@media (min-width: 1024px) {
  .example-style1 {
    /*
     * Styles for desktop size and larger here.
     * Here is where you would overwrite your base and tablet-size styles
     * that you want to change for this breakpoint.
     * Base styles and your 700px breakpoint styles (your tablet styles) are inherited
     * here so no need to repeat formerly defined properties that will remain unchanged.
     * Write these styles 3rd.
     */
  }
}


.example-style2 {
 /*
  * Styles for mobile size and larger
  * These are your base styles
  * Write these styles first
  */
}
@media (min-width: 700px) {
  .example-style2 {
    /*
     * Styles for tablet size and larger here.
     * Here is where you would overwrite any base styles that you want to change 
     * for this breakpoint.
     * Base styles are inherited here so no need to repeat formerly defined base 
     * properties that will remain unchanged.
     * Write these styles 2nd.
     */
  }
}
@media (min-width: 1024px) {
  .example-style2 {
    /*
     * Styles for desktop size and larger here.
     * Here is where you would overwrite your base and tablet-size styles
     * that you want to change for this breakpoint.
     * Base styles and your 700px breakpoint styles (your tablet styles) are inherited
     * here so no need to repeat formerly defined properties that will remain unchanged.
     * Write these styles 3rd.
     */
  }
}